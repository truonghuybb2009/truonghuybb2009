# This file is inspired from https://github.com/PrefectHQ/prefect/blob/master/src/prefect/cli/docker-compose.yml to remain compatible with the official repository's file
# Updated based on v1.2.2 `prefect server config` command
version: "3.7"

services:

  postgres:
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
        - postgres:/var/lib/postgresql/data
    image: postgres:11
    networks:
      - default
    restart: always
    
  hasura:
    command: graphql-engine serve
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HASURA_GRAPHQL_DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_LOG_LEVEL: warn
      HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE: 100
      HASURA_GRAPHQL_SERVER_PORT: '3000'
      HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: "true"
    healthcheck:
      interval: "10s"
      retries: 60
      start_period: "1s"
      test: wget -O - http://hasura:$${HASURA_GRAPHQL_SERVER_PORT}/healthz &>/dev/null
        || exit 1
      timeout: "2s"
    image: hasura/graphql-engine:v2.1.1
    #init: true
    networks:
      - default
    restart: always

  
  graphql:
    command: bash -c "prefect-server database upgrade -y && python src/prefect_server/services/graphql/server.py"
    depends_on:
      - hasura
    environment:
      PREFECT_CORE_VERSION: 1.2.2
      PREFECT_SERVER_DB_CMD: prefect-server database upgrade -y
      PREFECT_SERVER__DATABASE__CONNECTION_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura
    healthcheck:
      interval: "20s"
      retries: 60
      start_period: "1s"
      test: curl --fail --silent "http://graphql:4201/health" &> /dev/null || exit
        1
      timeout: 2s
    image: prefecthq/server:core-1.2.2
    networks:
      - default
    restart: always
  
  towel:
    command: python src/prefect_server/services/towel/__main__.py
    depends_on:
      - graphql
    environment:
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret} 
      PREFECT_SERVER__HASURA__HOST: hasura
    image: prefecthq/server:core-1.2.2
    networks:
      - default
    restart: always

  
  apollo:
    command: bash -c "./post-start.sh && npm run serve"
    depends_on:
      - graphql
      - hasura
    environment:
      GRAPHQL_SERVICE_HOST: http://graphql
      GRAPHQL_SERVICE_PORT: 4201
      HASURA_API_URL: http://hasura:3000/v1alpha1/graphql
      PREFECT_API_HEALTH_URL: http://graphql:4201/health
      PREFECT_API_URL: http://graphql:4201/graphql/
      PREFECT_SERVER__TELEMETRY__ENABLED: "true"
    healthcheck:
      interval: "10s"
      retries: 60
      start_period: "1s"
      test: curl --fail --silent "http://apollo:4200/.well-known/apollo/server-health"
        &> /dev/null || exit 1
      timeout: "2s"
    image: prefecthq/apollo:core-1.2.2
    networks:
      - default
    restart: always

  
  ui:
    command: /intercept.sh
    depends_on:
      - apollo
    environment:
      PREFECT_SERVER__APOLLO_URL: http://localhost:4200/graphql
    healthcheck:
      interval: "30s"
      retries: 3
      test: curl --fail --silent --head "http://ui:8080/" &> /dev/null || exit 1
      timeout: "5s"
    image: prefecthq/ui:core-1.2.2
    networks:
      - default
    restart: always
  nginx:
    depends_on:
      - ui
    build: ./
    ports:
      - 443:443
      - 4200:4200
    volumes:
      - ./auth:/etc/nginx/conf.d
      - ./auth/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - default

volumes:
  postgres:
